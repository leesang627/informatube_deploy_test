{"version":3,"sources":["components/informatube/YoutubePlayer.js","functions/playedSecFunc.js","components/informatube/InfostampForm.js","functions/stringFunc.js","components/informatube/InfostampItem.js","components/informatube/InfostampList.js","components/informatube/InfostampSketch.js","components/informatube/InfostampSketchButton.js","components/informatube/InfostampViewerButton.js","components/informatube/InfostampView.js","components/informatube/InformatubeMain.js","pages/Experiment.js"],"names":["useStyles","makeStyles","theme","playerWrapper","position","height","ReactPlayer","top","left","YoutubePlayer","url","handlePlayedSec","classes","dispatch","useDispatch","playing","useSelector","state","player","className","reactPlayer","width","controls","onProgress","playerState","parseInt","playedSeconds","onPlay","type","PLAY_PLAYER","onPause","PAUSE_PLAYER","playedSecFunc","playedSec","pad","d","toString","String","hh","root","display","flexDirection","justifyContent","alignItems","formContainer","inputContainer","inputForm","br1","br2","buttonContainer","InfostampForm","canvasRef","name","mode","view","isLoaded","list","me","user","_id","useState","timeChange","setTimeChange","disableSubmit","setDisableSubmit","time","info","infostamp","setInfostamp","handleTimeStop","handleTimeStart","useEffect","match","console","log","prev","handleChangeForm","e","target","id","value","Tooltip","title","TransitionComponent","Zoom","arrow","Button","variant","color","onClick","SecTohhmmss","onSubmit","preventDefault","current","clear","changeFormData","urlToImage","MODE_SKETCH","autoComplete","InputGroup","size","Prepend","Text","FormControl","onChange","aria-label","aria-describedby","placeholder","disabled","Append","stringFunc","str","n","length","substr","inline","InfostampItem","viewRef","trunc","ListItem","ListItemAvatar","Avatar","alt","stamper","slice","ListItemText","primary","secondary","Typography","component","likedUsers","dislikedUsers","ListItemSecondaryAction","IconButton","getImageUrl","MODE_VIEWER","selectInfostamp","setTimeout","scrollTop","scroll","edge","Divider","InfostampList","infostamps","loadInfostamps","infostampsInTime","filter","sort","a","b","List","map","key","createdAt","image","canvas","cover","zIndex","backgroundColor","progress","InfostampSketch","src","isChanging","isChanged","imgRef","useRef","canvasHeight","setCanvasHeight","CircularProgress","ref","tool","Tools","Pencil","lineColor","lineWidth","buttonGroup","InfostampSketchButton","uid","isSaving","isSaved","formData","ButtonGroup","undo","imgData","toDataURL","saveInfostamp","MODE_HIDDEN","closeButton","right","InfostampViewerButton","selectedInfostamp","likeToggle","setLikeToggle","dislikeToggle","setDislikeToggle","iid","cancelLike","like","window","open","focus","cancelDislike","dislike","overflow","sketch","border","viewer","infoContainer","padding","InfostampView","windowRef","imageUrl","onScroll","changeScroll","InformatubeMain","setPlayedSec","style","flexGrow","Grid","container","spacing","item","xs","Experiment","to"],"mappings":"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","file":"static/js/5.d7a1ad6c.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactPlayer from 'react-player';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PLAY_PLAYER, PAUSE_PLAYER } from '../../reducers/playerReducer';\n\nconst useStyles = makeStyles(theme => ({\n  playerWrapper: {\n    position: \"relative\",\n    height: \"50vh\"\n  },\n  ReactPlayer: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  }\n}));\n\nconst YoutubePlayer = ({ url, handlePlayedSec }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { playing } = useSelector(state => state.player);\n\n  const handleProgress = (playerState) => {\n    handlePlayedSec(parseInt(playerState.playedSeconds));\n  }\n\n  const handlePlay = () => {\n    dispatch({type: PLAY_PLAYER});\n  }\n  \n  const handlePause = () => {\n    dispatch({type: PAUSE_PLAYER});\n  }\n  \n  return (\n    <div className={classes.playerWrapper}>\n      <ReactPlayer \n        className={classes.reactPlayer}\n        url={url} \n        width='100%'\n        height='100%'\n        controls={true}\n        onProgress={handleProgress}\n        playing={playing}\n        onPlay={handlePlay}\n        onPause={handlePause}\n      />\n    </div>\n  )\n}\n\nexport default YoutubePlayer;\n","const playedSecFunc = {};\n\nplayedSecFunc.SecTohhmmss = (playedSec) => {\n  if(playedSec < 0) {\n    return \"0:00\"\n  }\n  const pad = (d) => ((d < 10) ? '0' + d.toString() : d.toString());\n  if (playedSec<60) {\n    return \"0:\"+pad(String(playedSec));\n  } else if (playedSec<3600) {\n    return String(parseInt(playedSec/60))+\":\"+pad(playedSec%60);\n  } else {\n    let hh=parseInt(playedSec/3600)\n    return String(hh)+\":\"+pad(parseInt((playedSec%3600)/60))+\":\"+pad(playedSec%60);\n  }\n}\n\nexport default playedSecFunc;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport BootstrapButton from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport playedSecFunc from '../../functions/playedSecFunc';\nimport { urlToImage, MODE_SKETCH } from '../../reducers/viewReducer';\nimport { changeFormData } from '../../reducers/infostampReducer';\nimport { PAUSE_PLAYER, PLAY_PLAYER } from '../../reducers/playerReducer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '80px',\n    //backgroundColor: 'grey',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  formContainer: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  inputContainer: {\n    width: '90%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  inputForm: {\n    width: '100%',\n  },\n  br1: {\n    height: 10,\n    width: 10,\n  },\n  br2: {\n    height: 5,\n    width: 5,\n  },\n  buttonContainer: {\n    width: '100%',\n    height: '100%',\n  },\n}))\n\nconst InfostampForm = ({ playedSec, name, canvasRef }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { mode } = useSelector(state => state.view);\n  const { playing } = useSelector(state => state.player);\n  const { isLoaded } = useSelector(state => state.list);\n  const me = useSelector(state => state.user.me);\n  const _id = me && me._id;\n  const [timeChange, setTimeChange] = useState(true);\n  const [disableSubmit, setDisableSubmit] = useState(true);\n  const [infostamp, setInfostamp] = useState({\n    time: '',\n    url: '',\n    info: '',\n  });\n\n  const handleTimeStop = () => {\n    setTimeChange(false);\n    setInfostamp({\n      ...infostamp,\n      time: playedSec, \n    });\n    dispatch({type: PAUSE_PLAYER});\n  };\n\n  const handleTimeStart = () => {\n    setTimeChange(true);\n    dispatch({type: PLAY_PLAYER});\n  };\n\n  useEffect(() => {\n    const regex_url = /[-a-zA-Z0-9@:%_.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_.~#?&//=]*)?/g;\n    if(!timeChange && infostamp.url.match(regex_url)){\n      setDisableSubmit(false);\n    } else{\n      setDisableSubmit(true);\n    }\n  }, [timeChange, infostamp.time, infostamp.url, infostamp.info])\n\n  useEffect(() => {\n    if(playing) {\n      handleTimeStart();\n    } else {\n      handleTimeStop();\n    }\n  }, [playing])\n\n  useEffect(() => {\n    console.log('hello');\n    if(isLoaded) {\n      setInfostamp(prev => ({\n        ...prev,\n        url: '',\n        info: '',\n      }))\n    }\n  }, [isLoaded])\n\n  const handleChangeForm = (e) => {\n    setInfostamp({\n      ...infostamp,\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  const handleSubmitInfostamp = (e) => {\n    e.preventDefault();\n    canvasRef.current && canvasRef.current.clear();\n    dispatch(changeFormData(infostamp));\n    dispatch(urlToImage(infostamp.url, _id));\n    dispatch({type: MODE_SKETCH});\n  } \n\n  const handleClickDeleteUrl = () => {\n    setInfostamp({\n      ...infostamp,\n      url: '',\n    });\n  }\n\n  const handleClickDeleteInfo = () => {\n    setInfostamp({\n      ...infostamp,\n      info: '',\n    });\n  }\n\n  return (\n    <div className={classes.root}>\n      {\n        timeChange ? \n        <Tooltip title=\"시간 선택\" TransitionComponent={Zoom} arrow>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleTimeStop}>\n            {playedSecFunc.SecTohhmmss(playedSec)}<br/>선택\n          </Button>\n        </Tooltip>   \n        :\n        <Tooltip title=\"시간 선택 취소\" TransitionComponent={Zoom} arrow>\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleTimeStart}>\n            {playedSecFunc.SecTohhmmss(infostamp.time)}<br/>취소\n          </Button>\n        </Tooltip>\n      }\n      <div className={classes.br1}></div>\n      <form onSubmit={handleSubmitInfostamp} className={classes.formContainer} autoComplete=\"off\">\n        <div className={classes.inputContainer}>\n          <div className={classes.inputForm}>\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>댓글</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl \n                value={infostamp.info} \n                id=\"info\" \n                onChange={handleChangeForm} \n                aria-label=\"info\" \n                aria-describedby=\"inputInfo\"\n                placeholder=\"관련 정보를 댓글로 달아주세요.\" \n                disabled={mode === 'sketch'}\n              />\n              <InputGroup.Append>\n                <BootstrapButton \n                  variant=\"outline-secondary\" \n                  onClick={handleClickDeleteInfo}\n                  disabled={mode === 'sketch'}\n                >지우기</BootstrapButton>\n              </InputGroup.Append>\n            </InputGroup>\n            <div className={classes.br2}></div>\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text >URL</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl \n                value={infostamp.url} \n                id=\"url\" \n                onChange={handleChangeForm} \n                aria-label=\"url\" \n                aria-describedby=\"inputURL\" \n                placeholder=\"출처 URL을 적어주세요.\"\n                disabled={mode === 'sketch'}\n              />\n              <InputGroup.Append>\n                <BootstrapButton \n                  variant=\"outline-secondary\" \n                  onClick={handleClickDeleteUrl}\n                  disabled={mode === 'sketch'}\n                >지우기</BootstrapButton>\n              </InputGroup.Append>\n            </InputGroup>\n          </div>\n        </div>\n        <div className={classes.br1}></div>\n        <Tooltip title=\"스케치 모드\" TransitionComponent={Zoom} arrow>\n          <Button\n            color=\"primary\"\n            type=\"submit\"\n            variant=\"contained\"\n            disabled={disableSubmit}\n          >\n            <VisibilityIcon/>\n          </Button>\n        </Tooltip>\n        \n      </form>\n    </div>\n  )\n}\n\nexport default InfostampForm;\n","const stringFunc = {};\n\nstringFunc.trunc = (str, n) => {\n  return (str.length > n) ? str.substr(0,n-1) + '...' : str;\n};\n\nexport default stringFunc;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { useDispatch } from 'react-redux';\nimport { getImageUrl, MODE_VIEWER, selectInfostamp } from '../../reducers/viewReducer';\nimport playedSecFunc from '../../functions/playedSecFunc';\nimport stringFunc from '../../functions/stringFunc';\n\nconst useStyles = makeStyles(theme => ({\n  inline: {\n    display: 'inline',\n  },\n}));\n\nconst InfostampItem = ({ infostamp, viewRef }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { SecTohhmmss } = playedSecFunc;\n  const { trunc } = stringFunc;\n\n  const handleClickView = () => {\n    dispatch(getImageUrl(infostamp));\n    dispatch({type: MODE_VIEWER});\n    dispatch(selectInfostamp(infostamp));\n    \n    setTimeout(() => {\n      viewRef.current.scrollTop = infostamp.scroll;\n    }, 100);\n  }\n\n  return (\n    <>\n    <ListItem alignItems=\"flex-start\">\n      <ListItemAvatar>\n        <Avatar alt={infostamp.stamper.name}>{infostamp.stamper.name.slice(0,2)}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={trunc(infostamp.info, 60)}\n        secondary={\n          <>\n            <Typography\n              component=\"span\"\n              variant=\"body1\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              {trunc(infostamp.url, 70)}\n            </Typography>\n            <br/>\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              {SecTohhmmss(infostamp.time)}~{SecTohhmmss(infostamp.time+10)} ------- 유용함 {infostamp.likedUsers.length} / 쓸모없음 {infostamp.dislikedUsers.length}\n            </Typography>\n          </>\n        }\n      />\n      <ListItemSecondaryAction>\n        <IconButton onClick={handleClickView} edge=\"end\" aria-label=\"view\">\n          <VisibilityIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n    </>\n  );\n}\n\nexport default InfostampItem;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport InfostampItem from './InfostampItem';\nimport { loadInfostamps } from '../../reducers/listReducer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n}));\n\nconst InfostampList = ({ playedSec, viewRef }) => {\n  const dispatch = useDispatch();\n  const { infostamps } = useSelector(state=>state.list)\n  const classes = useStyles();\n  useEffect(() => {\n    dispatch(loadInfostamps());\n  }, [dispatch]);\n\n  const infostampsInTime = infostamps && infostamps\n  .filter((infostamp) => {\n    return parseInt(infostamp.time)-1<playedSec && playedSec<parseInt(infostamp.time)+10;\n  })\n  .sort((a, b) => {\n    return ((a.likedUsers.length - a.dislikedUsers.length) - (b.likedUsers.length - b.dislikedUsers.length));\n  });\n\n  return (\n    <div>\n      <List className={classes.root}>\n        { \n          infostampsInTime && \n          infostampsInTime.map((infostamp) => (\n            <InfostampItem key={infostamp.createdAt} infostamp={infostamp} viewRef={viewRef} />\n          ))\n        }\n      </List>\n    </div>\n  )\n}\n\nexport default InfostampList\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useSelector } from 'react-redux';\nimport { SketchField, Tools } from 'react-sketch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  image: {\n    width: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: \"100%\",\n  },\n  cover: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    backgroundColor: \"white\",  \n  },\n  progress: {\n    position: 'absolute',\n    top: '40%',\n    left: '40%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  }\n}));\n\nconst InfostampSketch = ({ src, canvasRef }) => {\n  const classes = useStyles();\n\n  const { isChanging, isChanged } = useSelector(state=>state.view);\n\n  const imgRef = useRef();\n\n  const [canvasHeight, setCanvasHeight] = useState(200);\n  useEffect(() => {\n    if(imgRef.current) {\n      console.log(imgRef.current.height);\n      setCanvasHeight(imgRef.current.height);\n    }\n  }, [isChanged]);\n  return (\n    <>\n      {\n        isChanging ?\n          <div className={classes.cover}>\n            <div className={classes.progress}>\n              <CircularProgress/>\n              <div><br/>스케치 준비 중</div>\n            </div>\n          </div>\n          :\n          <>\n            <img ref={imgRef} src={src} className={classes.image} alt=\"View\"/>\n            <SketchField\n              className={classes.canvas}\n              ref={canvasRef}\n              tool={Tools.Pencil}\n              lineColor='rgba(255,0,0,0.7)'\n              lineWidth={3}\n              height={canvasHeight}\n            />\n          </>\n      }\n    </>\n  )\n};\n\nexport default InfostampSketch;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport { saveInfostamp } from '../../reducers/infostampReducer';\nimport { MODE_HIDDEN } from '../../reducers/viewReducer';\nimport { loadInfostamps } from '../../reducers/listReducer';\n\n\nconst useStyles = makeStyles(theme => ({\n  buttonContainer: {\n    width: 300,\n    height: 50,\n    position: 'absolute',\n    left: 50,\n    top: 520,\n  },\n  buttonGroup: {\n    display: 'flex',\n    justifyContent: 'center',\n  }\n}));\n\nconst InfostampSketchButton = ({ canvasRef, uid }) => {\n  const classes = useStyles();\n  const { isSaving, isSaved } = useSelector(state=>state.infostamp);\n  const { url, info, time } = useSelector(state=>state.infostamp.formData);\n  const { scroll } = useSelector(state=>state.view);\n  const dispatch = useDispatch();\n\n  const handleClickSave = () => {\n    const imgData = canvasRef.current.toDataURL();\n    dispatch(saveInfostamp({imgData, uid, url, info, time, scroll}));\n    dispatch(loadInfostamps());\n  };\n\n  const handleClickUndo = () => {\n    canvasRef.current.undo();\n  }\n\n  const handleClickClose = () => {\n    dispatch({type: MODE_HIDDEN})\n  }\n\n  return (\n    <div className={classes.buttonContainer}>\n      <div className={classes.buttonGroup}>\n        <ButtonGroup\n          color=\"primary\"\n          variant=\"contained\"\n          aria-label=\"contained primary button group\"\n        >\n          <Tooltip title=\"스케치 취소\" TransitionComponent={Zoom} arrow>\n            <Button onClick={handleClickUndo}>\n              <UndoIcon />\n            </Button>\n          </Tooltip>\n          <Button onClick={handleClickSave}>\n            {\n              isSaving ?\n                <CircularProgress size={20} color=\"inherit\" />\n                :\n                isSaved ?\n                  <>완료</>\n                  :\n                  <>댓글</>\n            }\n          </Button>\n          <Tooltip title=\"닫기\" TransitionComponent={Zoom} arrow>\n            <Button onClick={handleClickClose}>\n              <CloseIcon />\n            </Button>\n          </Tooltip>\n        </ButtonGroup>\n      </div>\n    </div>\n  )\n}\n\nexport default InfostampSketchButton;\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\nimport Zoom from '@material-ui/core/Zoom';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { like, dislike, cancelLike, cancelDislike } from '../../reducers/likeReducer';\nimport { MODE_HIDDEN } from '../../reducers/viewReducer';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  buttonContainer: {\n    width: 300,\n    height: 50,\n    position: 'absolute',\n    left: 50,\n    top: 520,\n  },\n  buttonGroup: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  closeButton: {\n    position: 'absolute',\n    right: 10,\n    top: 15,\n  }\n}));\n\nconst InfostampViewerButton = ({ uid }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { url } = useSelector(state=>state.view.selectedInfostamp);\n  const { selectedInfostamp } = useSelector(state => state.view)\n\n  const [likeToggle, setLikeToggle] = useState(false);\n  const [dislikeToggle, setDislikeToggle] = useState(false);\n\n  useEffect(()=>{\n    setLikeToggle(false);\n    setDislikeToggle(false);\n  }, [url]);\n\n  const handleClickLike = () => {\n    const iid = selectedInfostamp._id;\n    if (!likeToggle && !dislikeToggle) {\n      setLikeToggle(true);\n      dispatch(like(uid, iid));\n    } else if (likeToggle && !dislikeToggle) {\n      setLikeToggle(false);\n      dispatch(cancelLike(uid, iid));\n    }\n  }\n  const handleClickDislike = () => {\n    const iid = selectedInfostamp._id;\n    if (!likeToggle && !dislikeToggle) {\n      setDislikeToggle(true);\n      dispatch(dislike(uid, iid));\n    } else if (!likeToggle && dislikeToggle) {\n      setDislikeToggle(false);\n      dispatch(cancelDislike(uid,iid));\n    }\n  }\n  const handleClickLink = () => {\n    console.log(url);\n    const win = window.open(url, '_blank');\n    win.focus();\n  }\n  const handleClickClose = () => {\n    dispatch({ type:MODE_HIDDEN });\n  }\n\n  return (\n    <>\n    <div className={classes.closeButton}>\n      <IconButton onClick={handleClickClose}>\n        <CloseIcon/>\n      </IconButton>\n    </div>\n    <div className={classes.buttonContainer}>\n      <div className={classes.buttonGroup}>\n        <ButtonGroup\n          color=\"primary\"\n          variant=\"contained\"\n          aria-label=\"contained primary button group\"\n        >\n          <Tooltip title=\"유용함\"  TransitionComponent={Zoom} arrow>\n            <Button color={!likeToggle ? 'primary' : 'secondary'} onClick={handleClickLike} disabled={dislikeToggle}>\n              <ThumbUpAltIcon />\n            </Button>\n          </Tooltip>\n          <Button onClick={handleClickLink}>\n            링크\n          </Button>\n          <Tooltip title=\"쓸모없음\" TransitionComponent={Zoom} arrow>\n            <Button color={!dislikeToggle ? 'primary' : 'secondary'} onClick={handleClickDislike} disabled={likeToggle}>\n              <ThumbDownAltIcon />\n            </Button>\n          </Tooltip>\n        </ButtonGroup>\n      </div>\n    </div>\n    </>\n  )\n}\n\nexport default InfostampViewerButton;\n","import React, { useRef} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport InfostampSketch from './InfostampSketch';\nimport InfostampSketchButton from './InfostampSketchButton';\nimport { changeScroll } from '../../reducers/viewReducer';\nimport InfostampViewerButton from './InfostampViewerButton';\nimport stringFunc from '../../functions/stringFunc';\n\nconst useStyles = makeStyles(theme => ({\n  window: {\n    width: \"100%\",\n    height: 512,\n    overflow: \"auto\",\n    position: 'relative',\n  },\n  image: {\n    width: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  sketch: {\n    border: \"1px solid red\",\n  },\n  viewer: {\n    border: \"1px solid blue\",\n  },\n  infoContainer: {\n    width: \"100%\",\n    padding: 5,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }\n}));\n\nconst InfostampView = ({ uid, canvasRef, viewRef }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const windowRef = useRef();\n  const { trunc } = stringFunc;\n  \n  const { mode, imageUrl, selectedInfostamp } = useSelector(state=>state.view);\n  const handleScroll = () => {\n    dispatch(changeScroll(windowRef.current.scrollTop));\n  }\n  \n  return (\n    <>\n    {\n      mode === 'sketch' ? \n      <>\n        <div className={classes.sketch}>\n          <div className={classes.infoContainer}>\n            <Typography variant=\"subtitle1\" color=\"secondary\">\n              스케치 모드\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              원하는 위치로 스크롤 후, 표시를 해주세요.\n            </Typography>\n          </div>\n          <div className={classes.window} onScroll={handleScroll} ref={windowRef}>\n            <InfostampSketch canvasRef={canvasRef} src={imageUrl} uid={uid}/>\n          </div>\n        </div>\n        <InfostampSketchButton canvasRef={canvasRef} uid={uid}/> \n      </>\n      : \n      mode === 'viewer' ?\n      <>\n        <div className={classes.viewer}>\n          <div className={classes.infoContainer}>\n            <Typography variant=\"subtitle1\" color=\"primary\">\n              {trunc(selectedInfostamp.info,30)}\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              {trunc(selectedInfostamp.url, 40)}\n            </Typography>\n          </div>\n          <div className={classes.window} ref={viewRef}>\n            <img src={imageUrl} className={classes.image} alt=\"View\" />\n          </div>\n        </div>\n        <InfostampViewerButton uid={uid} />\n      </>\n      :\n      <div></div>\n    }\n    </>\n  )\n}\n\nexport default InfostampView;\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport YoutubePlayer from './YoutubePlayer';\nimport InfostampForm from './InfostampForm';\nimport InfostampList from './InfostampList';\nimport InfostampView from './InfostampView';\n\nconst InformatubeMain = () => {\n  const me = useSelector(state => state.user.me);\n  const name = me && me.name;\n  const _id = me && me._id;\n  const [playedSec, setPlayedSec] =useState(0);\n  const canvasRef = useRef();\n  const viewRef = useRef();\n\n  const handlePlayedSec = (playedSec) => {\n    setPlayedSec(playedSec);\n  }\n\n  return (\n    <div style={{flexGrow: 1}}>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <YoutubePlayer \n            url=\"https://www.youtube.com/watch?v=e1tqHqLFHIU\" \n            handlePlayedSec={handlePlayedSec}\n          />\n          <InfostampForm playedSec={playedSec} name={name} canvasRef={canvasRef}/>\n          <InfostampList playedSec={playedSec} viewRef={viewRef}/>\n        </Grid>\n        <Grid item xs={4} style={{position: 'relative'}}>\n          <InfostampView uid={_id} canvasRef={canvasRef} viewRef={viewRef}/>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default InformatubeMain;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport InformatubeMain from '../components/informatube/InformatubeMain';\n\n\nconst Experiment = () => {\n  const { me } = useSelector(state=>state.user);\n  return (\n    <>\n    { !me && <Redirect to={\"/login\"} /> }\n    <div>\n      <InformatubeMain />\n    </div>\n    </>\n  )\n}\n\nexport default Experiment;\n"],"sourceRoot":""}