{"version":3,"sources":["components/layout/FinishButton.js","components/layout/Navbar.js","withSplitting.js","pages/index.js","App.js","serviceWorker.js","reducers/rootReducer.js","sagas/baseURL.js","sagas/userSaga.js","sagas/infostampSaga.js","sagas/viewSaga.js","sagas/listSaga.js","sagas/likeSaga.js","sagas/syncSaga.js","sagas/rootSaga.js","index.js","reducers/likeReducer.js","reducers/userReducer.js","reducers/listReducer.js","reducers/viewReducer.js","reducers/infostampReducer.js","reducers/playerReducer.js"],"names":["FinishButton","React","useState","open","setOpen","dispatch","useDispatch","history","useHistory","handleClose","Button","variant","color","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","push","type","LOG_OUT_REQUEST","autoFocus","useStyles","makeStyles","theme","title","flexGrow","Navbar","classes","location","useLocation","me","useSelector","state","user","useEffect","LOAD_USER_REQUEST","AppBar","position","Toolbar","Typography","className","pathname","withSplitting","getComponent","props","Splitted","then","default","setState","this","Component","Start","About","Experiment","LogIn","Finish","App","CssBaseline","style","marginTop","Container","fixed","exact","path","component","Boolean","window","hostname","match","rootReducer","combineReducers","userReducer","infostamp","infostampReducer","view","viewReducer","list","listReducer","player","playerReducer","like","likeReducer","baseURL","logIn","watchLogIn","logOut","watchLogOut","loadUser","watchLoadUser","userSaga","logInAPI","name","axios","post","password","withCredentials","action","call","result","put","LOG_IN_SUCCESS","data","console","error","LOG_IN_FAILURE","takeLatest","LOG_IN_REQUEST","logOutAPI","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loadUserAPI","get","log","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","all","fork","defaults","saveInfostamp","watchSaveInfostamp","infostampSaga","saveInfostampAPI","payload","catch","err","SAVE_INFOSTAMP_SUCCESS","SAVE_INFOSTAMP_FAILURE","SAVE_INFOSTAMP_REQUEST","urlToImage","watchUrlToImage","viewSaga","urlToImageAPI","url","uid","res","imageUrl","URL_TO_IMAGE_SUCCESS","URL_TO_IMAGE_FAILURE","URL_TO_IMAGE_REQUEST","loadInfostamps","watchLoadInfostamps","listSaga","loadInfostampsAPI","infostamps","LOAD_INFOSTAMPS_SUCCESS","LOAD_INFOSTAMPS_FAILURE","LOAD_INFOSTAMPS_REQUEST","watchLike","dislike","watchDislike","cancelLike","watchCancelLike","cancelDislike","watchCancelDislike","likeSaga","likeAPI","iid","patch","LIKE_SUCCESS","LIKE_FAILURE","LIKE_REQUEST","dislikeAPI","DISLIKE_SUCCESS","DISLIKE_FAILURE","DISLIKE_REQUEST","cancelLikeAPI","CANCEL_LIKE_SUCCESS","CANCEL_LIKE_FAILURE","CANCEL_LIKE_REQUEST","cancelDislikeAPI","CANCEL_DISLIKE_SUCCESS","CANCEL_DISLIKE_FAILURE","CANCEL_DISLIKE_REQUEST","loadInfostamp","loadInfostampAndClose","syncSaga","delay","MODE_HIDDEN","rootSaga","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","initialState","isLiking","isLiked","likeError","isDisliking","isDisliked","dislikeError","isCancelingLike","isCanceledLike","cancelLikeError","isCancelingDislike","isCanceledDislike","cancelDislikeError","isLoggingIn","isLoggedIn","isLoggingOut","logInError","logOutError","loadUserError","isLoading","isLoaded","loadError","isChanging","isChanged","changeError","mode","scroll","selectedInfostamp","getImageUrl","GET_IMAGE_URL","changeScroll","CHANGE_SCROLL","selectInfostamp","SELECT_INFOSTAMP","MODE_SKETCH","MODE_VIEWER","stamper","_id","isSaving","isSaved","saveError","formData","info","time","changeFormData","CHANGE_FORM_DATA","playing","PLAY_PLAYER","PAUSE_PLAYER"],"mappings":"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","file":"static/js/main.a3affe20.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { LOG_OUT_REQUEST } from '../../reducers/userReducer';\n\nconst FinishButton = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const handleClickFinish = () => {\n    handleClose();\n    history.push('/finish');\n    dispatch({ type:LOG_OUT_REQUEST });\n  }\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\n        실험 종료\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n      >\n        <DialogTitle id=\"dialog-title\">실험 종료</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"dialog-description\">\n            정말 실험을 종료하시겠습니까?<br /> 종료하면 다시 실험에 참여하지 못합니다.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClickFinish} color=\"secondary\">\n            네, 실험 종료하겠습니다.\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            아니오\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default FinishButton;\n","import React, {useEffect} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport FinishButton from './FinishButton';\nimport { LOAD_USER_REQUEST } from '../../reducers/userReducer';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n  }\n}));\n\nconst Navbar = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { me } = useSelector(state => state.user);\n  useEffect(() => {\n    if(!me) {\n      dispatch({\n        type: LOAD_USER_REQUEST,\n      })\n    }\n  },[me, dispatch])\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Typography variant=\"h4\" className={classes.title}>\n          Informatube\n        </Typography>\n        { location.pathname !== '/finish' && <FinishButton /> }\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navbar;","import React, { Component } from 'react';\n\nconst withSplitting = getComponent => {\n  // 여기서 getComponent 는 () => import('./SplitMe') 의 형태로 함수가 전달되야합니다.\n  class WithSplitting extends Component {\n    state = {\n      Splitted: null\n    };\n\n    constructor(props) {\n      super(props);\n      getComponent().then(({ default: Splitted }) => {\n        this.setState({\n          Splitted\n        });\n      });\n    }\n\n    render() {\n      const { Splitted } = this.state;\n      if (!Splitted) {\n        return null;\n      }\n      return <Splitted {...this.props} />;\n    }\n  }\n\n  return WithSplitting;\n};\n\nexport default withSplitting;","import withSplitting from '../withSplitting';\n\nexport const Start = withSplitting(() => import('./Start'));\nexport const About = withSplitting(() => import('./About'));\nexport const Experiment = withSplitting(() => import('./Experiment'));\nexport const LogIn = withSplitting(() => import('./LogIn'));\nexport const Finish = withSplitting(() => import('./Finish'));","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Navbar from './components/layout/Navbar';\n// import Experiment from './pages/Experiment';\n// import LogIn from './pages/LogIn';\n// import About from './pages/About';\n// import Finish from './pages/Finish';\n// import Start from './pages/Start';\nimport {Start, LogIn, About, Experiment, Finish} from './pages';\n\nfunction App() {\n  return (\n    <>\n      {/* <BrowserRouter> */}\n      <HashRouter>\n        <CssBaseline />\n        <div className=\"App\">\n          <Navbar />\n          <div style={{marginTop: '30px'}}>\n            <Container fixed>\n              <Switch>\n                <Route exact path={\"/\"} component={Start} />\n                <Route path={\"/login\"} component={LogIn} />\n                <Route path={\"/about\"} component={About} />\n                <Route path={\"/experiment\"} component={Experiment} />\n                <Route path={\"/finish\"} component={Finish} />\n              </Switch>\n            </Container>\n          </div>\n        </div>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport infostampReducer from './infostampReducer';\nimport viewReducer from './viewReducer';\nimport listReducer from './listReducer';\nimport playerReducer from './playerReducer';\nimport likeReducer from './likeReducer';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  infostamp: infostampReducer,\n  view: viewReducer,\n  list: listReducer,\n  player: playerReducer,\n  like: likeReducer,\n});\n\nexport default rootReducer;","const baseURL = 'https://informatube.ngrok.io';\n\nexport default baseURL;","import { all, fork, takeLatest, put, call } from '@redux-saga/core/effects';\nimport axios from 'axios';\nimport { \n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n  LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\n} from '../reducers/userReducer';\nimport baseURL from './baseURL';\n\naxios.defaults.baseURL = baseURL;\n\nfunction logInAPI(name) {\n  return axios.post('/user/login', {name: name, password: 'dummy'}, {\n    withCredentials: true,\n  });\n}\n\nfunction* logIn(action) {\n  try{\n    const result = yield call(logInAPI, action.name);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      user: result.data,\n    })\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: e,\n    })\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout', {}, {\n    withCredentials: true,\n  });\n}\n\nfunction* logOut() {\n  try{\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    })\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e,\n    })\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user', {\n    withCredentials: true,\n  });\n}\n\nfunction* loadUser() {\n  try{\n    const result = yield call(loadUserAPI);\n    console.log('result',result);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      user: result.data,\n    })\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e,\n    })\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLoadUser),\n    fork(watchLogOut),\n  ]);\n}","import { all, fork, takeLatest, put, call } from '@redux-saga/core/effects';\nimport axios from 'axios';\nimport {SAVE_INFOSTAMP_REQUEST, SAVE_INFOSTAMP_SUCCESS, SAVE_INFOSTAMP_FAILURE} from '../reducers/infostampReducer';\nimport baseURL from './baseURL';\n\naxios.defaults.baseURL = baseURL;\n\nfunction saveInfostampAPI(payload) {\n  console.log(payload);\n  return axios.post('/infostamp', payload)\n    .then(()=> {console.log('post!')})\n    .catch((err) => console.error(err));\n}\n\nfunction* saveInfostamp(action) {\n  try{\n    yield call(saveInfostampAPI, action.payload);\n    yield put({\n      type: SAVE_INFOSTAMP_SUCCESS,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SAVE_INFOSTAMP_FAILURE,\n      error: e,\n    })\n  }\n}\n\nfunction* watchSaveInfostamp() {\n  yield takeLatest(SAVE_INFOSTAMP_REQUEST, saveInfostamp);\n}\n\nexport default function* infostampSaga() {\n  yield all([\n    fork(watchSaveInfostamp),\n  ]);\n}","import { all, fork, takeLatest, put, call } from '@redux-saga/core/effects';\nimport axios from 'axios';\nimport { URL_TO_IMAGE_REQUEST, \n  URL_TO_IMAGE_SUCCESS, \n  URL_TO_IMAGE_FAILURE,\n} from '../reducers/viewReducer';\nimport baseURL from './baseURL';\n\naxios.defaults.baseURL = baseURL;\n\nfunction urlToImageAPI([url, uid]) {\n  return axios.post('/infostamp/url', {url, uid})\n    .then((res) => (res.data));\n}\n\nfunction* urlToImage(action) {\n  try{\n    const { imageUrl } = yield call(urlToImageAPI, [action.url, action.uid]);\n    yield put({\n      type: URL_TO_IMAGE_SUCCESS,\n      imageUrl: imageUrl,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: URL_TO_IMAGE_FAILURE,\n      error: e,\n    })\n  }\n}\n\nfunction* watchUrlToImage() {\n  yield takeLatest(URL_TO_IMAGE_REQUEST, urlToImage);\n}\n\nexport default function* viewSaga() {\n  yield all([\n    fork(watchUrlToImage),\n  ]);\n}","import { all, fork, takeLatest, put, call } from '@redux-saga/core/effects';\nimport axios from 'axios';\nimport { LOAD_INFOSTAMPS_SUCCESS, LOAD_INFOSTAMPS_FAILURE, LOAD_INFOSTAMPS_REQUEST } from '../reducers/listReducer';\nimport baseURL from './baseURL';\n\naxios.defaults.baseURL = baseURL;\n\nfunction loadInfostampsAPI() {\n  return axios.get('/infostamps')\n    .then(res => res.data)\n    .catch(err => console.error(err));\n}\n\nfunction* loadInfostamps(action) {\n  try{\n    const infostamps = yield call(loadInfostampsAPI);\n    console.log(infostamps);\n    yield put({\n      type: LOAD_INFOSTAMPS_SUCCESS,\n      infostamps,\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_INFOSTAMPS_FAILURE,\n      error: e,\n    })\n  }\n}\n\nfunction* watchLoadInfostamps() {\n  yield takeLatest(LOAD_INFOSTAMPS_REQUEST, loadInfostamps);\n}\n\nexport default function* listSaga() {\n  yield all([\n    fork(watchLoadInfostamps),\n  ])\n}","import { all, fork, takeLatest, put, call } from '@redux-saga/core/effects';\nimport axios from 'axios';\nimport { \n  LIKE_SUCCESS, LIKE_FAILURE, LIKE_REQUEST,\n  DISLIKE_SUCCESS, DISLIKE_FAILURE, DISLIKE_REQUEST,\n  CANCEL_LIKE_REQUEST, CANCEL_LIKE_SUCCESS, CANCEL_LIKE_FAILURE,\n  CANCEL_DISLIKE_REQUEST, CANCEL_DISLIKE_SUCCESS, CANCEL_DISLIKE_FAILURE,\n} from '../reducers/likeReducer';\nimport baseURL from './baseURL';\n\naxios.defaults.baseURL = baseURL;\n\nfunction likeAPI([uid, iid]) {\n  return axios.patch('/infostamps/like', {uid, iid})\n    .then(res => res.data);\n}\n\nfunction* like(action) {\n  try {\n    const log = yield call(likeAPI, [action.uid, action.iid]);\n    yield put({\n      type: LIKE_SUCCESS,\n      log: log,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LIKE_FAILURE,\n      error: e,\n    });\n  }\n}\n\nfunction* watchLike() {\n  yield takeLatest(LIKE_REQUEST, like);\n}\n\nfunction dislikeAPI([uid, iid]) {\n  return axios.patch('/infostamps/dislike', {uid, iid})\n    .then(res => res.data);\n}\n\nfunction* dislike(action) {\n  try {\n    const log = yield call(dislikeAPI, [action.uid, action.iid]);\n    yield put({\n      type: DISLIKE_SUCCESS,\n      log: log,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: DISLIKE_FAILURE,\n      error: e,\n    });\n  }\n}\n\nfunction* watchDislike() {\n  yield takeLatest(DISLIKE_REQUEST, dislike);\n}\n\nfunction cancelLikeAPI([uid, iid]) {\n  return axios.patch('/infostamps/like/cancel', {uid, iid})\n    .then(res => res.data);\n}\n\nfunction* cancelLike(action) {\n  try {\n    const log = yield call(cancelLikeAPI, [action.uid, action.iid]);\n    yield put({\n      type: CANCEL_LIKE_SUCCESS,\n      log: log,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: CANCEL_LIKE_FAILURE,\n      error: e,\n    });\n  }\n}\n\nfunction* watchCancelLike() {\n  yield takeLatest(CANCEL_LIKE_REQUEST, cancelLike);\n}\n\nfunction cancelDislikeAPI([uid, iid]) {\n  return axios.patch('/infostamps/dislike/cancel', {uid, iid})\n    .then(res => res.data);\n}\n\nfunction* cancelDislike(action) {\n  try {\n    const log = yield call(cancelDislikeAPI, [action.uid, action.iid]);\n    yield put({\n      type: CANCEL_DISLIKE_SUCCESS,\n      log: log,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: CANCEL_DISLIKE_FAILURE,\n      error: e,\n    });\n  }\n}\n\nfunction* watchCancelDislike() {\n  yield takeLatest(CANCEL_DISLIKE_REQUEST, cancelDislike);\n}\n\nexport default function* likeSaga() {\n  yield all([\n    fork(watchLike),\n    fork(watchDislike),\n    fork(watchCancelLike),\n    fork(watchCancelDislike),\n  ])\n};","import {put, fork, all, takeLatest, delay} from '@redux-saga/core/effects';\nimport {SAVE_INFOSTAMP_SUCCESS} from '../reducers/infostampReducer';\nimport { loadInfostamps } from '../reducers/listReducer';\nimport { LIKE_SUCCESS, CANCEL_LIKE_SUCCESS, DISLIKE_SUCCESS, CANCEL_DISLIKE_SUCCESS } from '../reducers/likeReducer';\nimport { MODE_HIDDEN } from '../reducers/viewReducer';\n\nfunction* loadInfostamp(action) {\n  yield put(loadInfostamps());\n}\n\nfunction* loadInfostampAndClose(action) {\n  yield put(loadInfostamps());\n  yield delay(1000);\n  yield put({type: MODE_HIDDEN});\n}\n\nfunction* watchSaveInfostamp() {\n  yield takeLatest(SAVE_INFOSTAMP_SUCCESS, loadInfostampAndClose);\n  yield takeLatest(LIKE_SUCCESS, loadInfostamp);\n  yield takeLatest(CANCEL_LIKE_SUCCESS, loadInfostamp);\n  yield takeLatest(DISLIKE_SUCCESS, loadInfostamp);\n  yield takeLatest(CANCEL_DISLIKE_SUCCESS, loadInfostamp);\n}\n\nexport default function* syncSaga() {\n  yield all([\n    fork(watchSaveInfostamp),\n  ])\n}","import {all, call} from 'redux-saga/effects';\nimport userSaga from './userSaga';\nimport infostampSaga from './infostampSaga';\nimport viewSaga from './viewSaga';\nimport listSaga from './listSaga';\nimport likeSaga from './likeSaga';\nimport syncSaga from './syncSaga';\n\nexport default function* rootSaga() {\n  yield all([\n    call(userSaga),\n    call(infostampSaga),\n    call(viewSaga),\n    call(listSaga),\n    call(likeSaga),\n    call(syncSaga),\n  ]);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './reducers/rootReducer';\nimport rootSaga from './sagas/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // devtools\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const initialState = {\n  isLiking: false,\n  isLiked: false,\n  likeError: '',\n  isDisliking: false,\n  isDisliked: false,\n  dislikeError: '',\n  isCancelingLike: false,\n  isCanceledLike: false,\n  cancelLikeError: '',\n  isCancelingDislike: false,\n  isCanceledDislike: false,\n  cancelDislikeError: '',\n  log: '',\n}\n\nexport const like = (uid, iid) => ({\n  type: LIKE_REQUEST,\n  uid,\n  iid,\n});\n\nexport const dislike = (uid, iid) => ({\n  type: DISLIKE_REQUEST,\n  uid,\n  iid,\n});\n\nexport const cancelLike = (uid, iid) => ({\n  type: CANCEL_LIKE_REQUEST,\n  uid,\n  iid,\n});\n\nexport const cancelDislike = (uid, iid) => ({\n  type: CANCEL_DISLIKE_REQUEST,\n  uid,\n  iid,\n});\n\nexport const LIKE_REQUEST = 'LIKE_REQUEST';\nexport const LIKE_SUCCESS = 'LIKE_SUCCESS';\nexport const LIKE_FAILURE = 'LIKE_FAILURE';\n\nexport const DISLIKE_REQUEST = 'DISLIKE_REQUEST';\nexport const DISLIKE_SUCCESS = 'DISLIKE_SUCCESS';\nexport const DISLIKE_FAILURE = 'DISLIKE_FAILURE';\n\nexport const CANCEL_LIKE_REQUEST = 'CANCEL_LIKE_REQUEST';\nexport const CANCEL_LIKE_SUCCESS = 'CANCEL_LIKE_SUCCESS';\nexport const CANCEL_LIKE_FAILURE = 'CANCEL_LIKE_FAILURE';\n\nexport const CANCEL_DISLIKE_REQUEST = 'CANCEL_DISLIKE_REQUEST';\nexport const CANCEL_DISLIKE_SUCCESS = 'CANCEL_DISLIKE_SUCCESS';\nexport const CANCEL_DISLIKE_FAILURE = 'CANCEL_DISLIKE_FAILURE';\n\nconst likeReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case LIKE_REQUEST: {\n      return {\n        ...state,\n        isLiking: true,\n        isLiked: false,\n      }\n    }\n    case LIKE_SUCCESS: {\n      return {\n        ...state,\n        isLiking: false,\n        isLiked: true,\n        log: action.log,\n      }\n    }\n    case LIKE_FAILURE: {\n      return {\n        ...state,\n        isLiking: false,\n        isLiked: false,\n        likeError: action.error,\n      }\n    }\n    case DISLIKE_REQUEST: {\n      return {\n        ...state,\n        isDisliking: true,\n        isDisliked: false,\n      }\n    }\n    case DISLIKE_SUCCESS: {\n      return {\n        ...state,\n        isDisliking: false,\n        isDisliked: true,\n        log: action.log,\n      }\n    }\n    case DISLIKE_FAILURE: {\n      return {\n        ...state,\n        isDisliking: false,\n        isDisliked: false,\n        dislikeError: action.error,\n      }\n    }\n    case CANCEL_LIKE_REQUEST: {\n      return {\n        ...state,\n        isCancelingLike: true,\n        isCanceledLike: false,\n      }\n    }\n    case CANCEL_LIKE_SUCCESS: {\n      return {\n        ...state,\n        isCancelingLike: false,\n        isCanceledLike: true,\n        log: action.log,\n      }\n    }\n    case CANCEL_LIKE_FAILURE: {\n      return {\n        ...state,\n        isCancelingLike: false,\n        isCanceledLike: false,\n        cancelLikeError: action.error,\n      }\n    }\n    case CANCEL_DISLIKE_REQUEST: {\n      return {\n        ...state,\n        isCancelingDislike: true,\n        isCanceledDislike: false,\n      }\n    }\n    case CANCEL_DISLIKE_SUCCESS: {\n      return {\n        ...state,\n        isCancelingDislike: false,\n        isCanceledDislike: true,\n        log: action.log,\n      }\n    }\n    case CANCEL_DISLIKE_FAILURE: {\n      return {\n        ...state,\n        isCancelingDislike: false,\n        isCanceledDislike: false,\n        cancelDislikeError: action.error,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default likeReducer;","const initialState = {\n  isLoggingIn: false,\n  isLoggedIn: false,\n  isLoggingOut: false,\n  logInError: '',\n  logOutError: '',\n  loadUserError: '',\n  me: null,\n}\n\nexport const logIn = (name) => ({\n  type: LOG_IN_REQUEST,\n  name: name,\n})\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nconst userReducer = (state=initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST: {\n      return {\n        ...state,\n        isLoggingIn: true,\n        isLoggedIn: false,\n      }\n    }\n    case LOG_IN_SUCCESS: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: true, \n        me: action.user,\n      }\n    }\n    case LOG_IN_FAILURE: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: false,\n        logInError: action.error,\n        me: null,\n      }\n    }\n    case LOG_OUT_REQUEST: {\n      return {\n        ...state,\n        isLoggingOut: true,\n      }\n    }\n    case LOG_OUT_SUCCESS: {\n      return {\n        ...state,\n        isLoggingOut: false,\n        isLoggedIn: false, \n        me: null,\n      }\n    }\n    case LOG_OUT_FAILURE: {\n      return {\n        ...state,\n        isLoggingOut: false,\n        isLoggedIn: true,\n        logOutError: action.error,\n      }\n    }\n    case LOAD_USER_REQUEST: {\n      return {\n        ...state,\n      }\n    }\n    case LOAD_USER_SUCCESS: {\n      return {\n        ...state,\n        me: action.user,\n      }\n    }\n    case LOAD_USER_FAILURE: {\n      return {\n        ...state,\n        loadUserError: action.error,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default userReducer;","const initialState={\n  infostamps: [],\n  isLoading: false,\n  isLoaded: false,\n  loadError: '',\n}\n\nexport const loadInfostamps = () => ({\n  type: LOAD_INFOSTAMPS_REQUEST,\n});\n\nexport const LOAD_INFOSTAMPS_REQUEST = 'LOAD_INFOSTAMPS_REQUEST';\nexport const LOAD_INFOSTAMPS_SUCCESS = 'LOAD_INFOSTAMPS_SUCCESS';\nexport const LOAD_INFOSTAMPS_FAILURE = 'LOAD_INFOSTAMPS_FAILURE';\n\nconst listReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case LOAD_INFOSTAMPS_REQUEST: {\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false,\n      }\n    }\n    case LOAD_INFOSTAMPS_SUCCESS: {\n      return {\n        ...state,\n        infostamps: action.infostamps,\n        isLoading: false,\n        isLoaded: true,\n      }\n    }\n    case LOAD_INFOSTAMPS_FAILURE: {\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: false,\n        loadError: action.error,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default listReducer;","const initialState={\n  imageUrl: '',\n  isChanging: false,\n  isChanged: false,\n  changeError: '',\n  mode: 'hidden',\n  scroll: 0,\n  selectedInfostamp: null,\n};\n\nexport const urlToImage = (url, uid) => ({\n  type: URL_TO_IMAGE_REQUEST,\n  url,\n  uid,\n});\n\nexport const getImageUrl = (infostamp) => ({\n  type: GET_IMAGE_URL,\n  infostamp,\n});\n\nexport const changeScroll = (scroll) => ({\n  type: CHANGE_SCROLL,\n  scroll,\n})\n\nexport const selectInfostamp = (infostamp) => ({\n  type: SELECT_INFOSTAMP,\n  infostamp,\n})\n\nexport const URL_TO_IMAGE_REQUEST = 'URL_TO_IMAGE_REQUEST';\nexport const URL_TO_IMAGE_SUCCESS = 'URL_TO_IMAGE_SUCCESS';\nexport const URL_TO_IMAGE_FAILURE = 'URL_TO_IMAGE_FAILURE';\n\nexport const GET_IMAGE_URL = 'GET_IMAGE_URL';\nexport const CHANGE_SCROLL = 'CHANGE_SCROLL';\nexport const SELECT_INFOSTAMP = 'SELECT_INFOSTAMP';\n\nexport const MODE_HIDDEN = 'MODE_HIDDEN';\nexport const MODE_SKETCH = 'MODE_SKETCH';\nexport const MODE_VIEWER = 'MODE_VIEWER';\n\nconst viewReducer = (state=initialState, action) => {\n  switch (action.type) {\n    case URL_TO_IMAGE_REQUEST: {\n      return {\n        ...state,\n        isChanging: true,\n        isChanged: false,\n      }\n    }\n    case URL_TO_IMAGE_SUCCESS: {\n      return {\n        ...state,\n        isChanging: false,\n        isChanged: true,\n        imageUrl: action.imageUrl,\n      }\n    }\n    case URL_TO_IMAGE_FAILURE: {\n      return {\n        ...state,\n        isChanging: false,\n        isChanged: false,\n        changeError: action.error,\n      }\n    }\n    case GET_IMAGE_URL: {\n      return {\n        ...state,\n        imageUrl:`http://localhost:3065/images/${action.infostamp.stamper._id}/${action.infostamp._id}.jpg`,\n        scroll:action.infostamp.scroll,\n      }\n    }\n    case CHANGE_SCROLL: {\n      return {\n        ...state,\n        scroll: action.scroll,\n      }\n    }\n    case SELECT_INFOSTAMP: {\n      return {\n        ...state,\n        selectedInfostamp: action.infostamp,\n      }\n    }\n    case MODE_HIDDEN: {\n      return {\n        ...state,\n        mode: 'hidden',\n      }\n    }\n    case MODE_SKETCH: {\n      return {\n        ...state,\n        mode: 'sketch',\n      }\n    }\n    case MODE_VIEWER: {\n      return {\n        ...state,\n        mode: 'viewer',\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default viewReducer;","const initialState={\n  isSaving: false,\n  isSaved: false,\n  saveError: '',\n  formData: {\n    url: '',\n    info: '',\n    time: 0,\n  },\n}\n\nexport const saveInfostamp = (payload) => ({\n  type: SAVE_INFOSTAMP_REQUEST,\n  payload,\n})\n\nexport const changeFormData = (infostamp) => ({\n  type: CHANGE_FORM_DATA,\n  payload: infostamp,\n})\n\nexport const SAVE_INFOSTAMP_REQUEST = 'SAVE_INFOSTAMP_REQUEST';\nexport const SAVE_INFOSTAMP_SUCCESS = 'SAVE_INFOSTAMP_SUCCESS';\nexport const SAVE_INFOSTAMP_FAILURE = 'SAVE_INFOSTAMP_FAILURE';\n\nexport const CHANGE_ISSAVED = 'CHANGE_ISSAVED';\n\nexport const CHANGE_FORM_DATA = 'CHANGE_FORM_DATA';\n\nconst infostampReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case CHANGE_FORM_DATA: {\n      return {\n        ...state,\n        formData: action.payload,\n        isSaved: false,\n      }\n    }\n    case SAVE_INFOSTAMP_REQUEST: {\n      return {\n        ...state,\n        isSaving: true,\n        isSaved: false,\n      }\n    }\n    case SAVE_INFOSTAMP_SUCCESS: {\n      return {\n        ...state,\n        isSaving: false,\n        isSaved: true,\n      }\n    }\n    case SAVE_INFOSTAMP_FAILURE: {\n      return {\n        ...state,\n        isSaving: false,\n        isSaved: false,\n        saveError: action.error,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default infostampReducer;","const initialState = {\n  playing: false,\n};\n\nexport const PLAY_PLAYER = 'PLAY_PLAYER';\nexport const PAUSE_PLAYER = 'PAUSE_PLAYER';\n\nconst playerReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case PLAY_PLAYER: {\n      return {\n        ...state,\n        playing: true,\n      }\n    }\n    case PAUSE_PLAYER: {\n      return {\n        ...state,\n        playing: false,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default playerReducer;"],"sourceRoot":""}